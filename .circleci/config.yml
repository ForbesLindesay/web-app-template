version: 2.1

orbs:
  kubernetes: circleci/kubernetes@0.10.1

refs:
  - &only_master
    filters:
      branches:
        only: master

  - &not_master
    filters:
      branches:
        ignore: master

workflows:
  test:
    jobs:
      - unit-tests:
          <<: *not_master

  release:
    jobs:
      - deploy-staging:
          <<: *only_master
          context: common-env

      - production-approval:
          type: approval
          context: common-env
          requires:
            - deploy-staging

      - deploy-production:
          <<: *only_master
          context: common-env
          requires:
            - production-approval

jobs:
  unit-tests:
    docker:
      - image: circleci/node:12
    steps:
      - setup
      - build
      - test

  deploy-staging:
    docker:
      - image: circleci/node:12
    steps:
      - setup
      - build
      - push
      - deploy:
          environment: staging

  deploy-production:
    docker:
      - image: circleci/node:12
    steps:
      - setup
      - deploy:
          environment: production

commands:
  setup:
    description: 'Checkout and install dependencies'
    steps:
      - checkout
      - run:
          name: Versions
          command: node -v && npm -v && yarn -v
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile

  build:
    steps:
      - run:
          name: Build
          command: yarn build

  test:
    steps:
      - run:
          name: Test
          command: yarn test

  push:
    steps:
      - setup_remote_docker
      - run:
          name: Build Docker
          command: docker build -t $DOCKERHUB_USERNAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1 .
      - run:
          name: Authenticate
          command: echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Push Docker
          command: docker push $DOCKERHUB_USERNAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1

  deploy:
    parameters:
      environment:
        type: enum
        enum: ['staging', 'production']
    steps:
      - kubernetes/install
      - run:
          name: Copy certificate
          command: echo "$KUBERNETES_CLUSTER_CERTIFICATE" | base64 --decode > cert.crt
      - run:
          name: Deploy to Kubernetes
          command: |
            ENVIRONMENT=<< parameters.environment >> npx jskube apply \
                    --kubeconfig=/dev/null \
                    -f .kube/deployment.ts
      - run:
          name: Wait for rollout to complete
          command: |
            npx jskube rollout status \
                    deployment/web-app-template-<< parameters.environment >> \
                    --namespace web-app-template \
                    --kubeconfig=/dev/null
