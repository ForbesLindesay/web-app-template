apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: $CIRCLE_PROJECT_REPONAME-ingress-staging
spec:
  tls:
    - hosts:
        - $CIRCLE_PROJECT_REPONAME.staging.makewebtech.org
      secretName: $CIRCLE_PROJECT_REPONAME-ingress-tls-staging
  rules:
    - host: $CIRCLE_PROJECT_REPONAME.staging.makewebtech.org
      http:
        paths:
          - backend:
              serviceName: $CIRCLE_PROJECT_REPONAME-staging
              servicePort: 80
---
apiVersion: cert-manager.io/v1alpha2 # kubectl describe certificate $CIRCLE_PROJECT_REPONAME-certificate
kind: Certificate
metadata:
  name: $CIRCLE_PROJECT_REPONAME-certificate-staging
  namespace: $CIRCLE_PROJECT_REPONAME-staging
spec:
  secretName: $CIRCLE_PROJECT_REPONAME-ingress-tls-staging
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: $CIRCLE_PROJECT_REPONAME.staging.makewebtech.org
  dnsNames:
    - $CIRCLE_PROJECT_REPONAME.staging.makewebtech.org
---
apiVersion: v1
kind: Service
metadata:
  name: $CIRCLE_PROJECT_REPONAME-staging
spec:
  ports:
    - port: 80
      targetPort: 3000
  selector:
    app: $CIRCLE_PROJECT_REPONAME-staging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $CIRCLE_PROJECT_REPONAME-staging
spec:
  selector:
    matchLabels:
      app: $CIRCLE_PROJECT_REPONAME-staging
  replicas: 2
  template:
    metadata:
      labels:
        app: $CIRCLE_PROJECT_REPONAME-staging
    spec:
      containers:
        - name: $CIRCLE_PROJECT_REPONAME-staging
          image: $DOCKERHUB_USERNAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1
          ports:
            - containerPort: 3000
